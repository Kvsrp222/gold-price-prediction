# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Load your dataset (replace 'your_dataset.csv' with your actual file)
data = pd.read_csv('your_dataset.csv')

# Assuming your dataset has columns like 'Date' and 'Gold_Price'
# You might need additional features for a more accurate prediction

# Convert 'Date' to numerical values for simplicity (you might need a better approach)
data['Date'] = pd.to_datetime(data['Date']).astype(int)

# Define features and target variable
X = data[['Date']]  # Additional features can be added
y = data['Gold_Price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
predictions = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
print(f'Mean Squared Error: {mse}')

# Visualize the results
plt.scatter(X_test, y_test, color='black')
plt.plot(X_test, predictions, color='blue', linewidth=3)
plt.xlabel('Date')
plt.ylabel('Gold Price')
plt.title('Gold Price Prediction')
plt.show()
